/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HotelManagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import net.proteanit.sql.DbUtils;

/**
 *
 * @author Chaker
 */
public class Reservation extends javax.swing.JFrame {

    /**
     * Creates new form Reservation
     */
    public Reservation() {
        initComponents();
        
        Connection () ;
        remplissage();
    }
    
    Connection conn ;
    PreparedStatement st ;
    Statement set ;
    ResultSet rs ;
    public void Connection ()
    {
        
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/hotel", "root", "") ;
                System.out.print("connection avec succées ");
              
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }

    public ArrayList<Reservationcontenu> contenu(){
        ArrayList<Reservationcontenu> con=null ;
     con=new ArrayList<Reservationcontenu>();
     try{
     String sql="SELECT * FROM `reservation`;";
     set=conn.createStatement();
     rs=set.executeQuery(sql);
     Reservationcontenu reservation;
     while(rs.next()){
         reservation =new Reservationcontenu(rs.getInt(1) ,rs.getString("nom"),rs.getInt(3),rs.getString("telephone"),
                 rs.getString(5),rs.getString(6));
     con.add(reservation);
     }
     }catch(Exception ex){
     Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        return con ;
    }
    
    public void remplissage(){
     ArrayList<Reservationcontenu> con= contenu();
     DefaultTableModel mod=(DefaultTableModel)table2.getModel();
     mod.setRowCount(0);
     Object[] rw=new Object[6];
     for(int i = 0; i < con.size(); i++){
         rw[0]=con.get(i).getClient_id();
         rw[1]=con.get(i).getNom();
         rw[2]=con.get(i).getChambre_id();
         rw[3]=con.get(i).getTelephone();
         rw[4]=con.get(i).getDate_arrive();
         rw[5]=con.get(i).getDate_sortie();
         mod.addRow(rw);
     }
 }
    
  public void affichage (int ind){
     
     txtclientid.setText(Integer.toString(contenu().get(ind).getClient_id()));
     txtname.setText(contenu().get(ind).getNom());
     txtchambreid.setText(Integer.toString(contenu().get(ind).getChambre_id()));
     txtphone.setText(contenu().get(ind).getTelephone());
     
     
     
     
 }  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtclientid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtchambreid = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtarrive = new com.toedter.calendar.JDateChooser();
        txtsortie = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(java.awt.Color.darkGray);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("RESERVATION");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HotelManagement/eeeee.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(284, 284, 284)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel3.setText("Client ID :");

        jLabel4.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel4.setText("Nom :");

        jLabel5.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel5.setText("Chambre ID :");

        jLabel6.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel6.setText("Telephone :");

        jLabel8.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel8.setText("Arrivée :");

        jLabel9.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jLabel9.setText("Sortie :");

        txtclientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtclientidActionPerformed(evt);
            }
        });
        txtclientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtclientidKeyTyped(evt);
            }
        });

        txtchambreid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtchambreidKeyTyped(evt);
            }
        });

        txtphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtphoneKeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jButton1.setText("Reserver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jButton2.setText("Modifier");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jButton3.setText("Supprimer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("DejaVu Sans Mono", 1, 11)); // NOI18N
        jButton4.setText("Actualiser");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "client_id", "nom", "chambre_id", "telephone", "date_arrive", "date_sortie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtchambreid, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtphone)
                            .addComponent(txtclientid)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtsortie, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(txtarrive, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton3)
                        .addGap(33, 33, 33)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtclientid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtchambreid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtarrive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtsortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtclientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtclientidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtclientidActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        txtclientid.setText("");
        txtname.setText("");
        txtchambreid.setText("");
        txtphone.setText("");
        txtarrive.setDate(null);
        txtsortie.setDate(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         if(txtclientid.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Entrer Client Id pour effacer la reservation");
        }else{ try {
                String del = "DELETE FROM `reservation` WHERE client_id=?;";
                st = conn.prepareStatement(del);
                st.setInt(1, Integer.parseInt(txtclientid.getText()));
                int res =st.executeUpdate();
                remplissage();
                if(res>=1){
                    JOptionPane.showMessageDialog(null, "reservation supprimé", "Suppression", 2 );
                }else{
                    JOptionPane.showMessageDialog(null, "Client_id n'est pas existant");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
              String nom = txtname.getText() ;
              String telephone = txtphone.getText();
              
        if(nom.trim().equals("") || telephone.trim().equals("")
                ){
        JOptionPane.showMessageDialog(null, "Remplir tous les champs");
        }else if(txtclientid.getText()!=null || txtname.getText()!=null || txtchambreid.getText()!=null || txtphone.getText()!=null || 
                 txtarrive!=null || txtsortie!=null ){
             try {
            String check = "SELECT client_id FROM `reservation` where client_id =? ;";
                
                    st =conn.prepareStatement(check);
                    st.setInt(1, Integer.parseInt(txtclientid.getText()));
                    rs= st.executeQuery();
                    
                     if(rs.next()){
                        JOptionPane.showMessageDialog(null, "Client_id déja existe");
                    }else{
                         try{
                          String ch ="SELECT chambre_id FROM `reservation` where chambre_id =? ;";
                          st=conn.prepareStatement(ch);
                          st.setInt(1, Integer.parseInt(txtchambreid.getText()));
                          rs=st.executeQuery();
                          if(rs.next()){
                              JOptionPane.showMessageDialog(null, "Chambre déja reservé");
                          }else{
                              String sql = "INSERT INTO `reservation`(client_id, nom, chambre_id, telephone, date_arrive, date_sortie)VALUES (?, ?, ?, ?, ?, ?);";
            try {
                st = conn.prepareStatement(sql);
                st.setInt(1, Integer.parseInt(txtclientid.getText()));
                st.setString(2, nom);
                st.setInt(3, Integer.parseInt(txtchambreid.getText()));
                st.setString(4, telephone);
                try{
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
                String date_arrive = sdf.format(txtarrive.getDate());
                st.setString(5, date_arrive);
                
                SimpleDateFormat sd = new SimpleDateFormat("dd-MMM-yyyy");
                String date_sortie = sd.format(txtsortie.getDate());
                st.setString(6, date_sortie);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Remplir tous les champs");
                }
             
                
                
                int res = st.executeUpdate();
                remplissage();
                if(res<=1){
                    JOptionPane.showMessageDialog(null, "Succéess" );
                }else{
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Chambre n'est pas existant");
            }
                              
                           
                          }
                         }catch(Exception ex){
                             Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
                         }

                     }
        
        }         catch (SQLException ex) {
                     JOptionPane.showMessageDialog(null, "Chambre n'est pas existant");
                  }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         String nom = txtname.getText() ;
              String telephone = txtphone.getText();
              
        if(nom.trim().equals("") || telephone.trim().equals("")
                ){
        JOptionPane.showMessageDialog(null, "Remplir tous les champs");
        }else if(txtclientid.getText()!=null || txtname.getText()!=null || txtchambreid.getText()!=null || txtphone.getText()!=null || 
                 txtarrive!=null || txtsortie!=null ){
            
                    
            try {
                String sql2 = "UPDATE `reservation` SET nom=?, chambre_id=?, telephone=?, date_arrive=?, date_sortie=? WHERE client_id=?;";
                st = conn.prepareStatement(sql2);
                
                st.setString(1, nom);
                st.setInt(2, Integer.parseInt(txtchambreid.getText()));
                st.setString(3, telephone);
                
                try{
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
                String date_arrive = sdf.format(txtarrive.getDate());
                st.setString(4, date_arrive);
                
                SimpleDateFormat sd = new SimpleDateFormat("dd-MMM-yyyy");
                String date_sortie = sd.format(txtsortie.getDate());
                st.setString(5, date_sortie);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Remplir tous les champs");
                }
                st.setInt(6, Integer.parseInt(txtclientid.getText()));
                
                
                int res = st.executeUpdate();
                remplissage();
                if(res<=1){
                    JOptionPane.showMessageDialog(null, "Modification Succéess" );
                }else{
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
            }
                              
                           
                          
                        

                     
        
   
        }
                      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        Welcome wel = new Welcome();
        wel.setVisible(true);
        wel.pack();
        wel.setLocationRelativeTo(null);
        wel.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void txtclientidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclientidKeyTyped
        // TODO add your handling code here:
         if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtclientidKeyTyped

    private void txtchambreidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchambreidKeyTyped
        // TODO add your handling code here:
         if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtchambreidKeyTyped

    private void txtphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphoneKeyTyped
        // TODO add your handling code here:
         if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtphoneKeyTyped

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
        // TODO add your handling code here:
        int i= table2.getSelectedRow();
             affichage(i);
             TableModel mod = table2.getModel();
             
             try {
             DefaultTableModel dfm=(DefaultTableModel)table2.getModel();
             java.util.Date date_arrive=null;
             java.util.Date date_sortie=null;
             
             date_arrive=new SimpleDateFormat("dd-MMM-yyyy").parse((String)dfm.getValueAt(i, 4));
             txtarrive.setDate(date_arrive);
             date_sortie=new SimpleDateFormat("dd-MMM-yyyy").parse((String)dfm.getValueAt(i, 5));
             txtsortie.setDate(date_sortie);
             
             } catch (ParseException ex) {
             Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_table2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table2;
    private com.toedter.calendar.JDateChooser txtarrive;
    private javax.swing.JTextField txtchambreid;
    private javax.swing.JTextField txtclientid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtphone;
    private com.toedter.calendar.JDateChooser txtsortie;
    // End of variables declaration//GEN-END:variables
}
